{
  "_metadata": {
    "command_name": "auto-learning",
    "version": "2.0",
    "format": "json",
    "description": "Sistema de auto-aprendizado baseado em feedbacks negativos",
    "created": "2025-06-09",
    "ai_optimized": true
  },

  "trigger": {
    "patterns": [
      "aprender com os erros",
      "apply learning",
      "corrigir feedbacks"
    ],
    "priority_level": 50,
    "category": "system",
    "auto_trigger": false,
    "description": "Comando para aplicar correções baseadas em feedbacks capturados"
  },

  "behavior": {
    "phases": [
      {
        "phase": 1,
        "name": "read_feedback_history",
        "description": "Carregar histórico de feedbacks negativos",
        "steps": [
          {
            "step": 1,
            "action": "read_learning_file",
            "file": ".zoe/rules/commands/auto-learning.json",
            "section": "learning_entries"
          },
          {
            "step": 2,
            "action": "identify_pending_corrections",
            "filter": "status !== 'applied'"
          },
          {
            "step": 3,
            "action": "prioritize_corrections",
            "criteria": ["severity", "frequency", "impact"]
          }
        ]
      },
      {
        "phase": 2,
        "name": "apply_corrections",
        "description": "Aplicar correções mapeadas nos arquivos específicos",
        "steps": [
          {
            "step": 1,
            "action": "for_each_correction",
            "logic": "iterate through pending corrections"
          },
          {
            "step": 2,
            "action": "locate_target_files",
            "source": "correction.files_with_error"
          },
          {
            "step": 3,
            "action": "apply_corrective_actions",
            "method": "edit_file or search_replace based on complexity"
          },
          {
            "step": 4,
            "action": "mark_correction_applied",
            "update_status": "applied"
          }
        ]
      },
      {
        "phase": 3,
        "name": "validate_corrections",
        "description": "Verificar se as correções foram aplicadas corretamente",
        "steps": [
          {
            "step": 1,
            "action": "test_corrected_files",
            "validation": "syntax and functionality check"
          },
          {
            "step": 2,
            "action": "update_learning_status",
            "status": "validated"
          },
          {
            "step": 3,
            "action": "document_improvement",
            "file": ".zoe/rules/context/projects/[active_project]/progress/[YYYY-MM-DD]/README.md"
          }
        ]
      }
    ]
  },

  "feedback_capture": {
    "description": "Sistema passivo de captura de feedbacks negativos - NÃO aplica correções automaticamente",
    "trigger_phrases": [
      "não ficou legal",
      "isso está errado",
      "melhora isso",
      "não faça assim",
      "prefira sempre",
      "está feio",
      "corrija"
    ],
    "capture_process": {
      "step_1": "detect negative feedback in user message",
      "step_2": "identify files mentioned or recently edited",
      "step_3": "extract problem description",
      "step_4": "map corrective action needed",
      "step_5": "store in learning_entries with status: 'pending'"
    }
  },

  "learning_entries": [
    {
      "id": 1,
      "date": "2025-06-07",
      "feedback": "esse arquivo de test não ficou legal. Sempre que você criar documentações, prefira sempre descrever como deve ser feito, e não ficar jogando código na documentação das regras.",
      "files_with_error": [
        {
          "file": "templates/react-component-test.mdc",
          "problem": "Template extenso com 280+ linhas de código",
          "solution": "Reformular com instruções concisas em vez de código"
        },
        {
          "file": "how-zoe-works.md",
          "problem": "Blocos de código excessivos nas regras",
          "solution": "Remover código, manter apenas instruções"
        },
        {
          "file": "zoe-chore.mdc",
          "problem": "Código inline desnecessário",
          "solution": "Minimizar código inline"
        }
      ],
      "corrective_actions": [
        "Documentação = instruções claras",
        "Templates = código prático",
        "Não misturar os dois conceitos"
      ],
      "status": "applied",
      "severity": "medium"
    },
    {
      "id": 2,
      "date": "2025-06-07",
      "feedback": "melhora isso pra ja marcar em que arquivo teve o erro, para quando tomarmos uma ação, você ja saber qual arquivo/ regra modificar, entende?",
      "files_with_error": [
        {
          "file": "auto-learning.mdc",
          "problem": "Estrutura sem mapeamento de arquivos específicos",
          "solution": "Adicionar seção 'files_with_error' com paths e detalhes"
        },
        {
          "file": "zoe-chore.mdc",
          "problem": "Regra #5 sem especificação de localização de erros",
          "solution": "Atualizar para incluir mapeamento de arquivos"
        }
      ],
      "corrective_actions": [
        "Feedback deve mapear arquivos/localização específica",
        "Ações corretivas devem ser precisas e direcionadas",
        "Histórico de mudanças deve ser rastreável por arquivo"
      ],
      "status": "applied",
      "severity": "high"
    },
    {
      "id": 3,
      "date": "2025-06-07",
      "feedback": "mas que fique claro que NÃO é para você CORRIGIR nada até você receber o comando, que será o comando: aprender com os erros",
      "files_with_error": [
        {
          "file": "auto-learning.mdc",
          "problem": "Entrada #2 indica correção automática (incorreto)",
          "solution": "Separar captura de correção"
        },
        {
          "file": "zoe-chore.mdc",
          "problem": "Regra #5 mistura captura com correção",
          "solution": "Dividir em 2 fases (captura + comando)"
        }
      ],
      "corrective_actions": [
        "Auto-learning = APENAS captura e mapeamento",
        "Correções = APENAS após comando específico",
        "Separar responsabilidades: observar vs. agir",
        "Dar controle ao usuário sobre quando aplicar correções"
      ],
      "status": "applied",
      "severity": "critical"
    },
    {
      "id": 4,
      "date": "2025-06-07",
      "feedback": "Zoe, você não precisa colocar emoji em absolutamente tudo, é mais em titulos para dar um destaquezinho, não sair tacando emoji em tudo. E ja pode aprender com os erros já. Ta feio pra caralho",
      "files_with_error": [
        {
          "file": "zoe-chore.mdc",
          "problem": "Excesso de emojis em textos normais, listas e conteúdo",
          "solution": "Emojis removidos de textos normais, mantidos só em títulos principais"
        },
        {
          "file": "how-zoe-works.md",
          "problem": "Emojis demais em conteúdo regular, não só títulos",
          "solution": "Conteúdo limpo, emojis só em títulos de seções"
        }
      ],
      "corrective_actions": [
        "Emojis = APENAS títulos e seções principais para destaque",
        "Conteúdo regular = sem emojis, formatação limpa",
        "Menos é mais - evitar excesso visual",
        "Priorizar legibilidade sobre decoração"
      ],
      "status": "applied",
      "severity": "medium"
    },
    {
      "id": 5,
      "date": "2025-06-07",
      "feedback": "no seu core, eu quero que vc pegue as ações que vc sabe que geram alguma ação, por exemplo, os comandos, ou o feedback negativo e simplesmente jogue para dentro do arquivo. LA DENTRO DO ARQUIVO VOCÊ EXPLICA AS COISAS, entendeu? Para o chore não ter informação nenhuma sobre isso. Só saber quais são os gatilhos, entende? Ajusta pra nós todo trigger que vc tem para deixarmos bem objetivo",
      "files_with_error": [
        {
          "file": "zoe-chore.mdc",
          "problem": "Muitas explicações detalhadas, deveria ser só triggers",
          "solution": "Simplificado para apenas triggers e paths"
        }
      ],
      "corrective_actions": [
        "zoe-chore.mdc = apenas mapeamento de triggers",
        "Arquivos específicos = todas as instruções detalhadas",
        "Separação clara: dispatcher vs. implementação",
        "Core deve ser objetivo e limpo"
      ],
      "status": "applied",
      "severity": "high"
    }
  ],

  "learning_patterns": {
    "documentation_rules": [
      "Documentação deve ter instruções, não código",
      "Templates podem ter código prático",
      "Separar conceitos: instruções vs. implementação"
    ],
    "feedback_mapping": [
      "Sempre mapear arquivos específicos com problemas",
      "Identificar localização precisa dos erros",
      "Fornecer soluções direcionadas"
    ],
    "correction_workflow": [
      "Capturar feedback automaticamente",
      "Mapear arquivos e problemas",
      "Aguardar comando 'aprender com os erros' para aplicar",
      "Validar correções aplicadas"
    ],
    "formatting_guidelines": [
      "Emojis apenas em títulos principais",
      "Conteúdo regular sem formatação excessiva",
      "Priorizar legibilidade"
    ],
    "architecture_principles": [
      "zoe-chore.mdc = dispatcher de triggers",
      "Arquivos específicos = instruções detalhadas",
      "Separação clara de responsabilidades"
    ]
  },

  "context_integration": {
    "description": "Sistema integrado com contexto do projeto ativo",
    "requires_active_project": true,
    "updates_progress": true,
    "isolation_level": "full",
    "cross_project_learning": false
  },

  "validation": {
    "before_application": [
      "verificar se arquivos existem",
      "validar sintaxe das correções",
      "confirmar impacto das mudanças"
    ],
    "after_application": [
      "testar arquivos modificados",
      "verificar integridade do sistema",
      "documentar melhorias aplicadas"
    ]
  },

  "integration": {
    "passive_triggers": [
      "negative feedback detection in any user message",
      "file editing errors",
      "command execution failures"
    ],
    "active_triggers": [
      "explicit 'aprender com os erros' command"
    ],
    "updates_files": [
      ".zoe/rules/commands/auto-learning.json",
      ".zoe/rules/context/projects/[active_project]/progress/[YYYY-MM-DD]/README.md"
    ],
    "reads_files": [
      ".zoe/rules/context/active-project.json"
    ]
  },

  "error_handling": {
    "file_not_found": {
      "action": "log_missing_file",
      "message": "⚠️ **Arquivo não encontrado:** [file_path]\n💡 **Ignorando correção para este arquivo**"
    },
    "correction_failed": {
      "action": "log_failure",
      "message": "❌ **Falha ao aplicar correção em:** [file_path]\n🔍 **Erro:** [error_details]"
    },
    "syntax_error": {
      "action": "rollback_changes",
      "message": "❌ **Erro de sintaxe após correção**\n🔄 **Revertendo mudanças em:** [file_path]"
    }
  },

  "performance": {
    "feedback_detection": "real-time passive scanning",
    "batch_processing": "apply multiple corrections at once",
    "validation": "lightweight syntax checking"
  }
} 