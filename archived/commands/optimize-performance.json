{
  "_metadata": {
    "command_name": "optimize-performance",
    "version": "1.0", 
    "format": "json",
    "description": "OtimizaÃ§Ãµes automÃ¡ticas de performance para React/Next.js",
    "created": "2025-06-08",
    "ai_optimized": true
  },
  
  "trigger": {
    "patterns": [
      "otimizar performance",
      "optimize performance",
      "melhorar performance"
    ],
    "priority_level": 6,
    "category": "maintenance"
  },

  "behavior": {
    "description": "AplicaÃ§Ã£o de otimizaÃ§Ãµes de performance baseadas na stack conhecida",
    "phases": [
      {
        "phase": 1,
        "name": "analyze_performance",
        "description": "AnÃ¡lise de gargalos de performance",
        "checks": [
          "Large bundle sizes",
          "Unnecessary re-renders",
          "Memory leaks",
          "Unused imports",
          "Heavy computations in render",
          "Missing memoization"
        ]
      },
      {
        "phase": 2,
        "name": "apply_optimizations",
        "description": "Aplicar otimizaÃ§Ãµes identificadas",
        "optimizations": [
          {
            "type": "react_memo",
            "description": "Aplicar React.memo em componentes puros",
            "target": "Components without props changes"
          },
          {
            "type": "use_callback",
            "description": "Memoizar callbacks com useCallback",  
            "target": "Functions passed as props"
          },
          {
            "type": "use_memo",
            "description": "Memoizar computaÃ§Ãµes pesadas",
            "target": "Expensive calculations in render"
          },
          {
            "type": "lazy_loading",
            "description": "Lazy loading de componentes",
            "target": "Heavy components not immediately needed"
          },
          {
            "type": "image_optimization",
            "description": "Otimizar imagens (Next.js Image)",
            "target": "img tags without optimization"
          },
          {
            "type": "bundle_splitting",
            "description": "Code splitting strategies",
            "target": "Large bundle chunks"
          }
        ]
      },
      {
        "phase": 3,
        "name": "measure_impact",
        "description": "Medir impacto das otimizaÃ§Ãµes",
        "metrics": [
          "Bundle size reduction",
          "Render time improvements", 
          "Memory usage reduction",
          "Lighthouse score improvements"
        ]
      }
    ]
  },

  "output_format": {
    "success": {
      "template": "âš¡ **Performance Otimizada:** [optimizations_count] melhorias aplicadas\n\nðŸ“Š **Impacto:**\n[performance_metrics]\n\nðŸš€ **Principais otimizaÃ§Ãµes:**\n[optimizations_summary]",
      "variables": {
        "optimizations_count": "total optimizations applied",
        "performance_metrics": "before/after performance metrics",
        "optimizations_summary": "list of key optimizations"
      }
    },
    "already_optimized": {
      "template": "âœ¨ **JÃ¡ otimizado:** Performance em excelente estado!\n\nðŸ“ˆ **MÃ©tricas atuais:** [current_metrics]",
      "variables": {
        "current_metrics": "current performance indicators"
      }
    }
  },

  "integration": {
    "post_execution": [
      {
        "action": "update_progress",
        "description": "Register performance improvements in daily progress"
      },
      {
        "action": "context_updater",
        "description": "Update project context with performance metrics"
      }
    ]
  }
} 