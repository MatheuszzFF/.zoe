---
description: 
globs: 
alwaysApply: false
---
# üîç Context Checker - Action Obrigat√≥ria Level 0

## Trigger
- **SEMPRE** antes de qualquer comando ou resposta
- Detecta automaticamente qualquer comando "zoe iniciar [projeto]" ou similar
- Executada com prioridade m√°xima (level 0)

## Comportamento
**VERIFICA√á√ÉO AUTOM√ÅTICA E CRIA√á√ÉO OBRIGAT√ìRIA DE ESTRUTURA:**

### ‚ö†Ô∏è REGRA CR√çTICA
**SEMPRE CRIAR ESTRUTURA COMPLETA, MESMO SE J√Å EXISTIR PROJETO**
- Verificar se pasta do projeto existe
- Verificar se project-context.json existe  
- Verificar se pasta de progresso existe
- Verificar se README.md do dia existe
- **SE QUALQUER COISA ESTIVER FALTANDO, CRIAR IMEDIATAMENTE**

### 1. An√°lise de Comando
```
Detectar padr√µes:
- "zoe, iniciar [nome-projeto]"
- "zoe iniciar [nome-projeto]" 
- Qualquer comando que mencione nome de projeto
- Comandos em projeto diferente do ativo
```

### 2. Verifica√ß√£o de Contexto
```
Verificar se:
‚úÖ Projeto solicitado == active-project.json
‚úÖ Estrutura context/projects/[projeto]/ existe
‚úÖ project-context.json existe e est√° atualizado
‚úÖ Pasta progress/[hoje]/ existe
‚úÖ Contexto carregado est√° correto
```

### 3. Corre√ß√£o Autom√°tica
**Se projeto solicitado ‚â† projeto ativo OU estrutura n√£o existe:**
1. **Atualizar active-project.json** com novo projeto
2. **CRIAR ESTRUTURA OBRIGATORIAMENTE** context/projects/[novo-projeto]/
3. **CRIAR project-context.json** b√°sico SEMPRE (mesmo se n√£o existir)
4. **CRIAR pasta progress** para hoje SEMPRE
5. **Analisar package.json** do projeto para detectar stack
6. **Log da mudan√ßa** no progresso

**COMANDOS ESPEC√çFICOS PARA CRIA√á√ÉO:**
```bash
# Criar estrutura completa
mkdir -p ".zoe/rules/context/projects/[projeto]/progress/$(date +%Y-%m-%d)"

# Verificar se project-context.json existe, se n√£o criar com template
if [ ! -f ".zoe/rules/context/projects/[projeto]/project-context.json" ]; then
    cp ".zoe/rules/context/project-context-template.json" ".zoe/rules/context/projects/[projeto]/project-context.json"
    # Substituir placeholders com dados reais
fi

# Criar README.md do progresso di√°rio
if [ ! -f ".zoe/rules/context/projects/[projeto]/progress/$(date +%Y-%m-%d)/README.md" ]; then
    cp ".zoe/rules/context/daily-progress-template.md" ".zoe/rules/context/projects/[projeto]/progress/$(date +%Y-%m-%d)/README.md"
    # Substituir placeholders com dados reais
fi
```

### 4. Valida√ß√£o Final
```
VALIDA√á√ÉO OBRIGAT√ìRIA (SEMPRE EXECUTAR):
- ‚úÖ active-project.json aponta para projeto correto
- ‚úÖ project-context.json existe e √© v√°lido  
- ‚úÖ Estrutura de pastas est√° criada
- ‚úÖ Pasta de progresso di√°rio existe
- ‚úÖ README.md de progresso existe
- ‚úÖ Sistema pronto para operar no contexto correto

SE QUALQUER VALIDA√á√ÉO FALHAR:
- PARAR execu√ß√£o
- CRIAR estrutura faltante
- REPETIR valida√ß√£o
- S√ì CONTINUAR se tudo estiver OK
```

### 5. Cria√ß√£o Autom√°tica Obrigat√≥ria
```
SEMPRE verificar e criar se n√£o existir:
1. Pasta: .zoe/rules/context/projects/[projeto]/
2. Pasta: .zoe/rules/context/projects/[projeto]/progress/
3. Pasta: .zoe/rules/context/projects/[projeto]/progress/[hoje]/
4. Arquivo: .zoe/rules/context/projects/[projeto]/project-context.json
5. Arquivo: .zoe/rules/context/projects/[projeto]/progress/[hoje]/README.md

NUNCA assumir que estrutura existe - SEMPRE verificar e criar
```

### 5. Estrutura Autom√°tica Criada

**Estrutura de Pastas:**
```
.zoe/rules/context/projects/[projeto]/
‚îú‚îÄ‚îÄ project-context.json     # Contexto espec√≠fico
‚îî‚îÄ‚îÄ progress/               # Progresso isolado
    ‚îî‚îÄ‚îÄ [YYYY-MM-DD]/       # Por data
        ‚îî‚îÄ‚îÄ README.md       # Log di√°rio
```

**project-context.json Template:**
```json
{
  "_metadata": {
    "version": "1.0",
    "created": "[timestamp]",
    "project_name": "[nome-projeto]",
    "description": "Auto-gerado pelo context-checker"
  },
  "project_overview": {
    "name": "[nome-projeto]",
    "type": "A ser definido",
    "objectives": ["Detectar automaticamente"],
    "current_phase": "Inicializa√ß√£o",
    "priority_focus": "Setup inicial"
  },
  "tech_stack": {
    "auto_detected": true,
    "detection_source": "package.json analysis"
  }
}
```

## Execu√ß√£o Obrigat√≥ria
- **Level 0** no priority-map.json
- **Blocking:** true
- **Mandatory:** true
- **Sempre executada** antes de qualquer outro comando/action

## Objetivo
**Tornar IMPOSS√çVEL** esquecer de atualizar contexto:
- Verifica√ß√£o autom√°tica sempre
- Corre√ß√£o autom√°tica quando necess√°rio
- Context memory sempre correto
- Zero interven√ß√£o manual necess√°ria

## Log de A√ß√£o
```
üîç CONTEXT CHECKER EXECUTADO:
- Projeto solicitado: [nome]
- Projeto ativo: [nome-atual]
- A√ß√£o: [nenhuma | atualizado | criado]
- Status: ‚úÖ Contexto correto
```



