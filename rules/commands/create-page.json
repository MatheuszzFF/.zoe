{
  "_metadata": {
    "command_name": "create-page",
    "version": "2.0",
    "format": "json",
    "description": "Cria√ß√£o estruturada de p√°ginas React com SEO e padr√µes espec√≠ficos",
    "created": "2025-06-09",
    "ai_optimized": true
  },

  "trigger": {
    "patterns": [
      "criar p√°gina [nome]",
      "create page [nome]"
    ],
    "parameters": {
      "nome": {
        "type": "string",
        "required": true,
        "validation": "kebab-case preferred for URLs",
        "description": "Nome da p√°gina a ser criada"
      }
    },
    "priority_level": 9,
    "category": "development"
  },

  "behavior": {
    "phases": [
      {
        "phase": 1,
        "name": "detect_project_stack",
        "description": "Detectar configura√ß√µes do projeto para p√°ginas",
        "steps": [
          {
            "step": 1,
            "action": "read_active_project",
            "file": ".zoe/rules/context/active-project.json"
          },
          {
            "step": 2,
            "action": "read_project_context",
            "file": ".zoe/rules/context/projects/[active_project]/project-context.json",
            "extract": ["tech_stack", "code_patterns"]
          },
          {
            "step": 3,
            "action": "detect_framework",
            "logic": "check for Next.js (pages/), React Router, or other routing"
          }
        ]
      },
      {
        "phase": 2,
        "name": "create_page_structure",
        "description": "Criar estrutura completa de arquivos da p√°gina",
        "base_path": "pages/[page-name]/",
        "files": [
          {
            "file": "[name].page.tsx",
            "description": "P√°gina principal + Head/SEO",
            "template": "react_page_main",
            "mandatory": true,
            "includes": ["SEO metadata", "page configuration", "main component"]
          },
          {
            "file": "[name].template.tsx",
            "description": "Estrutura visual da p√°gina",
            "template": "react_page_template",
            "mandatory": true,
            "includes": ["layout structure", "visual hierarchy"]
          },
          {
            "file": "[name].classes.ts",
            "description": "Classes Tailwind organizadas",
            "template": "tailwind_page_classes",
            "condition": "tech_stack.css_framework === 'Tailwind CSS'"
          },
          {
            "file": "[name].types.ts",
            "description": "Props interfaces da p√°gina",
            "template": "page_typescript_types",
            "mandatory": true
          },
          {
            "file": "[name].composite.tsx",
            "description": "Componentes espec√≠ficos da p√°gina",
            "template": "page_composite_components",
            "condition": "complex_page === true"
          }
        ]
      },
      {
        "phase": 3,
        "name": "configure_routing",
        "description": "Configurar roteamento baseado no framework",
        "framework_specific": {
          "next.js": {
            "action": "create_route_file",
            "path": "pages/[name].tsx or app/[name]/page.tsx",
            "includes_seo": true
          },
          "react_router": {
            "action": "update_router_config",
            "path": "update routing configuration",
            "register_route": true
          },
          "remix": {
            "action": "create_route_file",
            "path": "app/routes/[name].tsx",
            "includes_loader": true
          }
        }
      },
      {
        "phase": 4,
        "name": "add_seo_metadata",
        "description": "Configurar SEO e metadados",
        "seo_elements": [
          {
            "element": "page_title",
            "template": "{{PAGE_NAME}} | {{SITE_NAME}}"
          },
          {
            "element": "meta_description",
            "template": "Generated description for {{PAGE_NAME}} page"
          },
          {
            "element": "og_tags",
            "includes": ["og:title", "og:description", "og:type"]
          },
          {
            "element": "canonical_url",
            "template": "{{SITE_URL}}/{{PAGE_SLUG}}"
          }
        ]
      }
    ]
  },

  "coding_standards": {
    "file_responsibilities": {
      ".page.tsx": [
        "p√°gina principal",
        "configura√ß√µes de SEO",
        "head metadata",
        "page-level state",
        "data fetching"
      ],
      ".template.tsx": [
        "estrutura visual",
        "layout da p√°gina",
        "hierarquia de componentes",
        "responsive design"
      ],
      ".classes.ts": [
        "classes Tailwind",
        "estilos espec√≠ficos da p√°gina",
        "varia√ß√µes de layout"
      ],
      ".types.ts": [
        "interfaces da p√°gina",
        "props types",
        "data structures"
      ],
      ".composite.tsx": [
        "componentes espec√≠ficos",
        "se√ß√µes da p√°gina",
        "elementos reutiliz√°veis"
      ]
    },
    "naming_conventions": {
      "page_files": "kebab-case (home-page, about-us)",
      "component_names": "PascalCase (HomePage, AboutUs)",
      "types": "T[PageName] pattern"
    }
  },

  "seo_configuration": {
    "mandatory_tags": [
      "title",
      "meta description",
      "viewport",
      "charset"
    ],
    "recommended_tags": [
      "og:title",
      "og:description", 
      "og:image",
      "twitter:card",
      "canonical"
    ],
    "framework_integration": {
      "next.js": "use Next.js Head or metadata API",
      "gatsby": "use Gatsby Head API",
      "react_router": "use react-helmet-async"
    }
  },

  "routing_patterns": {
    "static_pages": {
      "pattern": "pages/[name]/[name].page.tsx",
      "url": "/[name]",
      "examples": ["about", "contact", "services"]
    },
    "dynamic_pages": {
      "pattern": "pages/[name]/[slug].page.tsx",
      "url": "/[name]/[slug]",
      "examples": ["blog/[slug]", "products/[id]"]
    },
    "nested_pages": {
      "pattern": "pages/[category]/[name]/[name].page.tsx",
      "url": "/[category]/[name]",
      "examples": ["admin/dashboard", "user/profile"]
    }
  },

  "context_integration": {
    "description": "Integra√ß√£o com contexto do projeto ativo",
    "requires_active_project": true,
    "reads_project_context": true,
    "updates_progress": true,
    "isolation_level": "full"
  },

  "examples": {
    "basic_page": {
      "command": "criar p√°gina about",
      "creates": [
        "pages/about/about.page.tsx",
        "pages/about/about.template.tsx",
        "pages/about/about.types.ts",
        "pages/about/about.classes.ts"
      ],
      "routing": "/about"
    },
    "dynamic_page": {
      "command": "criar p√°gina blog-post",
      "creates": [
        "pages/blog-post/blog-post.page.tsx",
        "pages/blog-post/blog-post.template.tsx",
        "pages/blog-post/blog-post.types.ts",
        "pages/blog-post/blog-post.composite.tsx"
      ],
      "routing": "/blog/[slug]"
    }
  },

  "template_content": {
    "page_template": {
      "structure": "import statements, type definitions, main component, SEO setup",
      "seo_boilerplate": "Head component with title, description, og tags",
      "data_fetching": "getStaticProps/getServerSideProps if Next.js"
    },
    "template_template": {
      "structure": "visual layout, component composition, responsive design",
      "sections": "header, main content, footer if applicable"
    }
  },

  "validation": {
    "page_name": {
      "pattern": "^[a-z0-9\\-]+$",
      "max_length": 50,
      "forbidden_names": ["index", "api", "_app", "_document"],
      "description": "kebab-case, sem caracteres especiais"
    },
    "url_conflicts": {
      "check_existing_routes": true,
      "suggest_alternatives": true
    }
  },

  "integration": {
    "related_commands": [
      "create-component (level 8)",
      "zoe-start (level 3)"
    ],
    "updates_files": [
      ".zoe/rules/context/projects/[active_project]/progress/[YYYY-MM-DD]/README.md"
    ],
    "reads_files": [
      ".zoe/rules/context/active-project.json",
      ".zoe/rules/context/projects/[active_project]/project-context.json"
    ],
    "creates_files": [
      "pages/[page-name]/[name].page.tsx",
      "pages/[page-name]/[name].template.tsx",
      "pages/[page-name]/[name].types.ts"
    ]
  },

  "error_handling": {
    "page_exists": {
      "action": "prompt_override",
      "message": "‚ùå **P√°gina '[name]' j√° existe**\nüí° **Sobrescrever?** (s/n)\nüìÅ **Localiza√ß√£o:** pages/[name]/"
    },
    "invalid_name": {
      "action": "show_validation_error",
      "message": "‚ùå **Nome inv√°lido:** '[name]'\n‚úÖ **Use:** kebab-case (ex: about-us)\n‚ùå **Evitar:** PascalCase, camelCase, espa√ßos"
    },
    "routing_conflict": {
      "action": "suggest_alternative",
      "message": "‚ö†Ô∏è **Conflito de rota:** '[name]' j√° existe\nüí° **Sugest√µes:** [name]-page, [name]-detail, [category]-[name]"
    }
  },

  "performance": {
    "optimizations": [
      "lazy loading for large pages",
      "code splitting at page level",
      "SEO metadata optimization"
    ],
    "best_practices": [
      "minimize initial bundle size",
      "optimize images and assets",
      "implement proper meta tags"
    ]
  }
} 