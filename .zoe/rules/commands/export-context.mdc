---
description: 
globs: 
alwaysApply: false
---
# üì§ Exportar Contexto - Comando

## Trigger
- Usu√°rio digita: `exportar contexto` ou `export context`

## Comportamento
**Gerar package de contexto** para reutiliza√ß√£o em outros projetos:

### 1. Dados a Exportar
```
Incluir no export:
‚úÖ project-memory.json (contexto principal)
‚úÖ stack-tech.mdc (configura√ß√£o de stack)  
‚úÖ Padr√µes estabelecidos
‚úÖ Decis√µes arquiteturais
‚úÖ Learning insights
‚úÖ Prefer√™ncias de desenvolvimento

Excluir do export:
‚ùå Logs espec√≠ficos do projeto
‚ùå Componentes criados
‚ùå Progress hist√≥rico
‚ùå Dados sens√≠veis/espec√≠ficos
```

### 2. Estrutura do Export
```json
{
  "export_metadata": {
    "version": "1.0",
    "exported_from": "[nome do projeto]",
    "export_date": "[YYYY-MM-DD]",
    "zoe_version": "1.0",
    "compatibility": ["design-system", "react-project", "next-project"]
  },
  
  "tech_stack_template": {
    "frontend": { "framework": "React", "language": "TypeScript" },
    "styling": "Tailwind CSS",
    "testing": { "approach": "userEvent mandatory" },
    "patterns": { "component_structure": "separation of concerns" }
  },
  
  "architectural_patterns": [
    {
      "pattern": "Component separation",
      "description": ".component + .template + .classes + .types",
      "rationale": "Maintainability and testability",
      "applicability": "All component creation"
    }
  ],
  
  "development_preferences": {
    "code_quality": "Quality over speed",
    "testing": "Mandatory for all components",
    "documentation": "Comprehensive and automated",
    "naming": "kebab-case files, English variables"
  },
  
  "learning_insights": [
    {
      "insight": "User prefers structured systems",
      "application": "Always propose systematic approaches",
      "confidence": "high"
    }
  ],
  
  "recommended_commands": [
    "create-component",
    "context-summary", 
    "update-stack",
    "priority-system"
  ]
}
```

### 3. Tipos de Export

#### **A. Export Completo**
```
Comando: "exportar contexto completo"
Inclui: Tudo (stack + padr√µes + insights + prefer√™ncias)
Arquivo: zoe-context-export-full-[date].json
```

#### **B. Export de Stack**
```
Comando: "exportar contexto stack"
Inclui: Apenas configura√ß√µes t√©cnicas
Arquivo: zoe-stack-export-[date].json
```

#### **C. Export de Padr√µes**
```
Comando: "exportar contexto padr√µes"
Inclui: Apenas decis√µes arquiteturais e patterns
Arquivo: zoe-patterns-export-[date].json
```

### 4. Localiza√ß√£o do Export
```
Criar em: .zoe/exports/
Formato: zoe-context-export-[type]-[YYYY-MM-DD].json
Backup: Manter √∫ltimos 5 exports
```

### 5. Sanitiza√ß√£o de Dados
**Remover/Anonimizar:**
```
- Nomes espec√≠ficos de projeto
- Dados pessoais
- Caminhos absolutos
- Informa√ß√µes sens√≠veis
- Logs com timestamps espec√≠ficos
```

### 6. Valida√ß√£o do Export
**Verificar antes de gerar:**
```
‚úÖ JSON v√°lido
‚úÖ Estrutura completa
‚úÖ Dados sanitizados
‚úÖ Compatibilidade com vers√£o atual
‚úÖ Tamanho razo√°vel (< 1MB)
```

### 7. Estrutura de Resposta
```
üì§ **Contexto Exportado:**

üìä **Resumo do Export:**
- **Tipo:** [Completo/Stack/Padr√µes]
- **Tamanho:** [X] KB
- **Itens inclu√≠dos:** [X] configura√ß√µes, [X] padr√µes, [X] insights

üìÅ **Arquivo gerado:**
`.zoe/exports/zoe-context-export-[type]-[date].json`

üîÑ **Como usar em outro projeto:**
1. Copie o arquivo para o novo projeto
2. Execute: "importar contexto [nome-do-arquivo]"
3. Zoe aplicar√° configura√ß√µes automaticamente

üí° **Inclu√≠do no export:**
- ‚úÖ Stack tecnol√≥gica e padr√µes
- ‚úÖ Decis√µes arquiteturais
- ‚úÖ Prefer√™ncias de desenvolvimento  
- ‚úÖ Learning insights
- ‚úÖ Configura√ß√µes do sistema Zoe

üö´ **Exclu√≠do do export:**
- ‚ùå Componentes espec√≠ficos
- ‚ùå Hist√≥rico de progresso
- ‚ùå Logs de sess√£o
- ‚ùå Dados sens√≠veis/espec√≠ficos
```

## Objetivo
Permitir reutiliza√ß√£o de configura√ß√µes, padr√µes e aprendizados entre projetos diferentes.

## Exemplo de Uso
```
Usu√°rio: "exportar contexto"
Zoe: [Gera export completo ‚Üí Salva em .zoe/exports/ ‚Üí Informa localiza√ß√£o e instru√ß√µes]
```

